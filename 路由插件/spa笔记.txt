1、定义个全局对象spa
2、定义个settings，保存渲染容器，缓存页面，配置一些全局信息
3、定义个两个事件，页面加载（渲染）前，页面加载（渲染）后
4、spa.init，用来初始化组件（绑定onhashchange事件等）
5、spa.pageAjax，用来请求页面，并且缓存当前页面
6、spa.allPageCongig，用来保存各个页面的配置信息（一个路径，一个start专属方法）
7、render用来渲染html

//==================================================
第一种，可以写个pageshow事件，页面加载后触发，js代码逻辑放在里面
第二种，所有的js文件写成组件，当切换页面的时候就请求，在页面加载之后（也就是render）执行。

最主要的我觉得还是要给每个页面定义一个生命周期，这样就可以定义一套通用的逻辑，可以实现页面的enter和leave俩接口

为了避免各个js文件的变量污染，可以放在页面加载后的事件里面，也可以用回调的形式处理
但是，事件要注销，资源要释放，怎-么-弄


//==================================================
对于js资源释放的问题

定义事件，loadbefore,loadafter,在页面加载前和页面加载后触发，enter和leaver，进去和离开页面时触发
然后再每个单独的js文件中先取消loadafter事件，再绑定，这样就不会冲突了和重复绑定事件了
js文件可以不再html片段中引入，可以在indexjs的配置项里面搞

我艹，这样还是要定义个页面生命周期，还要写个事件系统，我想想

最后还是写了个页面生命周期。。。。虽然只有俩事件
	